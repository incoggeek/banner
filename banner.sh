#!/bin/bash

TARGET=$1
PORT=$2
FILENAME=$3

# Banner

banner(){
cat <<  "EOF" 
   ___                        
  / _ )___ ____  ___  ___ ____
 / _  / _ `/ _ \/ _ \/ -_) __/
/____/\_,_/_//_/_//_/\__/_/   
                             
Author: incoggeek
Github: https://github.com/incoggeek

EOF
}

# Check if required tools are installed
check_tools() {
    for tool in nslookup ping whatweb wafw00f curl nmap; do
        if ! command -v $tool &> /dev/null; then
            echo "$tool is not installed. Please install it and try again. "
            exit 1
        fi
    done
}

pre_check() {
    # Fetching IP
    #IP=$(nslookup $1 | grep -iw "Address" | sed -n '2p' | cut -d ":" -f2)

    # Ensure domain and port are provided
    if [[ -z ${TARGET} || -z ${PORT} || -z ${FILENAME} ]]; then
        echo "Usage: $0 <TARGET> <PORT> <FILENAME>"
        exit 1
    fi

    # Ping domain to check if it's up
    if ping -c 1 ${TARGET} &> /dev/null; then
        
        echo -e "Target is up \U0001F64C"
        echo -e "Please wait until recon get done \U0000231B"

    else 
        echo -e "Target seems down \U0001F613"
        exit 1
    fi

    # Check if file already exists
    if [[ -f ${FILENAME} ]]; then
        echo -e "File '${FILENAME}' already exists \U0001F4C1"
        exit 1
    else 
        touch ${FILENAME}
    fi

}

# Execute the pre-checks
banner
check_tools
pre_check

# Create the output file if it doesn't exist
touch $FILENAME

# Output the result of WhatWeb
echo -e "\n-----Result generated by WhatWeb-----\n" >> ${FILENAME}
WB=$(whatweb ${TARGET} | sed 's/, /\n/g')
echo "${WB}" >> ${FILENAME}

# Output the result of WafW00f
echo -e "\n-----Result generated by WafW00f-----\n" >> ${FILENAME}
WA=$(wafw00f ${TARGET} | grep  "WAF")
echo "${WA}" >> ${FILENAME}

# Output the result of Curl
echo -e "\n-----Result generated by Curl-----\n" >> ${FILENAME}
CL=$(curl -I "${TARGET}:${PORT}" | grep -iw "server")
echo "${CL}" >> ${FILENAME}

# Output the result of Nmap
echo -e "\n-----Result generated by Nmap-----\n" >> ${FILENAME}
NP=$(nmap -sV --script=banner.nse ${TARGET} | grep -i "open\|closed\|OS details")
echo "${NP}" >> ${FILENAME}

echo "Results saved to ${FILENAME}"
